<Page
    x:Class="MyFeed.Uwp.Views.FeedView"
    d:DataContext="{d:DesignInstance Type=implementations:FeedViewModel}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:implementations="using:MyFeed.ViewModels"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:controls="using:MyFeed.Uwp.Controls"
    xmlns:views="using:MyFeed.Uwp.Views"
    xmlns:actions="using:MyFeed.Uwp.Actions"
    NavigationCacheMode="Disabled"
    mc:Ignorable="d">

    <Page.Transitions>
        <TransitionCollection>
            <NavigationThemeTransition>
                <NavigationThemeTransition.DefaultNavigationTransitionInfo>
                    <EntranceNavigationTransitionInfo />
                </NavigationThemeTransition.DefaultNavigationTransitionInfo>
            </NavigationThemeTransition>
        </TransitionCollection>
    </Page.Transitions>

    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="WindowStates">
                <VisualState x:Name="WideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="FeedGrid.Background" Value="{ThemeResource LowBackgroundThemeBrush}"/>
                        <Setter Target="FeedGrid.(Grid.ColumnSpan)" Value="1" />
                        <Setter Target="ArticleFrame.(Grid.Column)" Value="1" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="4*"/>
            <ColumnDefinition Width="9*"/>
        </Grid.ColumnDefinitions>
        <Frame x:Name="ArticleFrame" Grid.ColumnSpan="2" Canvas.ZIndex="1" SourcePageType="views:EmptyView"/>
        <Grid x:Name="FeedGrid" Grid.Column="0" Grid.ColumnSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="48"/>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid Grid.RowSpan="2" Height="96" VerticalAlignment="Top"
                  Background="{ThemeResource LowBackgroundThemeBrush}"/>
            <controls:TitleBlock Grid.Row="0" Text="{Binding Converter={StaticResource Locale}, ConverterParameter=FeedViewTitle}"/>
            <StackPanel Grid.Row="0" HorizontalAlignment="Right" Orientation="Horizontal">
                <controls:TransparentButton Symbol="Bookmarks" 
                    Visibility="{Binding IsEmpty, Converter={StaticResource FalsyToVisible}}">
                    <controls:TransparentButton.Flyout>
                        <Flyout Placement="Bottom">
                            <Flyout.FlyoutPresenterStyle>
                                <Style TargetType="FlyoutPresenter">
                                    <Setter Property="Padding" Value="0"/>
                                    <Setter Property="Margin" Value="0"/>
                                    <Setter Property="IsTabStop" Value="True"/>
                                </Style>
                            </Flyout.FlyoutPresenterStyle>
                            <ListBox ItemsSource="{Binding Items}" MinWidth="200" 
                                SelectedItem="{Binding Selection, Mode=TwoWay}">
                                <interactivity:Interaction.Behaviors>
                                    <core:EventTriggerBehavior EventName="Tapped">
                                        <actions:CloseFlyoutAction/>
                                    </core:EventTriggerBehavior>
                                </interactivity:Interaction.Behaviors>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Title}"/>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Flyout>
                    </controls:TransparentButton.Flyout>
                    <ToolTipService.ToolTip>
                        <TextBlock Text="{Binding Converter={StaticResource Locale}, ConverterParameter=SelectCategory}"/>
                    </ToolTipService.ToolTip>
                </controls:TransparentButton>
                <controls:TransparentButton Symbol="Sync" Command="{Binding Load}">
                    <ToolTipService.ToolTip>
                        <TextBlock Text="{Binding Converter={StaticResource Locale}, ConverterParameter=Refresh}" />
                    </ToolTipService.ToolTip>
                </controls:TransparentButton>
            </StackPanel>
            <Pivot Grid.Row="1" ItemsSource="{Binding Items, Mode=OneTime}" 
                   SelectedItem="{Binding Selection, Mode=TwoWay}">
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="Loaded">
                        <actions:ReactiveCommandAction Command="{Binding Load}"/>
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
                <Pivot.HeaderTemplate>
                    <DataTemplate x:DataType="implementations:FeedGroupViewModel">
                        <TextBlock Text="{Binding Title}"/>
                    </DataTemplate>
                </Pivot.HeaderTemplate>
                <Pivot.ItemContainerStyle>
                    <Style TargetType="PivotItem">
                        <Setter Property="Margin" Value="0"/>
                    </Style>
                </Pivot.ItemContainerStyle>
                <Pivot.ItemTemplate>
                    <DataTemplate x:DataType="implementations:FeedGroupViewModel">
                        <Grid>
                            <toolkit:PullToRefreshListView ShowsScrollingPlaceholders="False" 
                                RefreshCommand="{Binding Fetch}" ItemsSource="{Binding Items}" 
                                IsItemClickEnabled="True" SelectionMode="None">
                                <interactivity:Interaction.Behaviors>
                                    <core:EventTriggerBehavior EventName="Loaded">
                                        <actions:ReactiveCommandAction Command="{Binding Fetch}"/>
                                    </core:EventTriggerBehavior>
                                </interactivity:Interaction.Behaviors>
                                <toolkit:PullToRefreshListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                        <Setter Property="Padding" Value="0"/>
                                    </Style>
                                </toolkit:PullToRefreshListView.ItemContainerStyle>
                                <toolkit:PullToRefreshListView.ItemContainerTransitions>
                                    <TransitionCollection>
                                        <ContentThemeTransition VerticalOffset="0" HorizontalOffset="30"/>
                                        <EntranceThemeTransition FromHorizontalOffset="30" FromVerticalOffset="0"/>
                                        <AddDeleteThemeTransition/>
                                    </TransitionCollection>
                                </toolkit:PullToRefreshListView.ItemContainerTransitions>
                                <toolkit:PullToRefreshListView.PullToRefreshContent>
                                    <Border HorizontalAlignment="Center" CornerRadius="10" Width="20" Height="20" 
                                            Background="{ThemeResource SystemControlBackgroundChromeMediumLowBrush}"/>
                                </toolkit:PullToRefreshListView.PullToRefreshContent>
                                <toolkit:PullToRefreshListView.ReleaseToRefreshContent>
                                    <Border HorizontalAlignment="Center" CornerRadius="10" Width="20" Height="20" 
                                            Background="{ThemeResource SystemControlBackgroundAccentBrush}"/>
                                </toolkit:PullToRefreshListView.ReleaseToRefreshContent>
                                <toolkit:PullToRefreshListView.ItemTemplate>
                                    <DataTemplate x:DataType="implementations:FeedItemViewModel">
                                        <Grid Padding="0 12" Background="Transparent" Opacity="{Binding Read,
                                            Mode=OneWay, Converter={StaticResource TruthyToTransparent}}">
                                            <interactivity:Interaction.Behaviors>
                                                <core:EventTriggerBehavior EventName="Holding">
                                                    <actions:OpenFlyoutAction/>
                                                </core:EventTriggerBehavior>
                                                <core:EventTriggerBehavior EventName="RightTapped">
                                                    <actions:OpenFlyoutAction/>
                                                </core:EventTriggerBehavior>
                                                <core:EventTriggerBehavior EventName="Tapped">
                                                    <actions:ReactiveCommandAction Command="{Binding Open}"/>
                                                </core:EventTriggerBehavior>
                                                <core:EventTriggerBehavior EventName="DataContextChanged">
                                                    <actions:ModalConfirmAction 
                                                        Interaction="{Binding Copied}"
                                                        Message="{Binding Converter={StaticResource Locale}, ConverterParameter=CopyLinkSuccess}"
                                                        Title="{Binding Converter={StaticResource Locale}, ConverterParameter=SettingsNotification}"/>
                                                </core:EventTriggerBehavior>
                                            </interactivity:Interaction.Behaviors>
                                            <FlyoutBase.AttachedFlyout>
                                                <MenuFlyout>
                                                    <MenuFlyoutItem 
                                                        Text="{Binding Converter={StaticResource Locale}, ConverterParameter=Read}"
                                                        Icon="PostUpdate" Command="{Binding Open}"/>
                                                    <MenuFlyoutItem 
                                                        Icon="Link" Command="{Binding Launch}" 
                                                        Text="{Binding Converter={StaticResource Locale}, ConverterParameter=OpenInBrowser}"/>
                                                    <MenuFlyoutItem 
                                                        Icon="Copy" Command="{Binding Copy}" 
                                                        Text="{Binding Converter={StaticResource Locale}, ConverterParameter=CopyLink}"/>
                                                    <MenuFlyoutItem 
                                                        Icon="ReShare" Command="{Binding Share}"
                                                        Text="{Binding Converter={StaticResource Locale}, ConverterParameter=ReShare}"/>
                                                    <MenuFlyoutSeparator />
                                                    <MenuFlyoutItem 
                                                        Icon="Read" Command="{Binding MarkRead}" 
                                                        Text="{Binding Converter={StaticResource Locale}, ConverterParameter=MarkAsRead}"
                                                        Visibility="{Binding Read, Mode=OneWay, Converter={StaticResource FalsyToVisible}}"/>
                                                    <MenuFlyoutItem 
                                                        Icon="Mail" Command="{Binding MarkRead}" 
                                                        Text="{Binding Converter={StaticResource Locale}, ConverterParameter=MarkAsUnread}"
                                                        Visibility="{Binding Read, Mode=OneWay, Converter={StaticResource TruthyToVisible}}"/>
                                                    <MenuFlyoutItem 
                                                        Icon="OutlineStar" Command="{Binding MarkFave}"
                                                        Text="{Binding Converter={StaticResource Locale}, ConverterParameter=RemoveFromFavorites}"
                                                        Visibility="{Binding Fave, Mode=OneWay, Converter={StaticResource TruthyToVisible}}"/>
                                                    <MenuFlyoutItem 
                                                        Icon="SolidStar" Command="{Binding MarkFave}" 
                                                        Text="{Binding Converter={StaticResource Locale}, ConverterParameter=AddToFavorites}"
                                                        Visibility="{Binding Fave, Mode=OneWay, Converter={StaticResource FalsyToVisible}}"/>
                                                </MenuFlyout>
                                            </FlyoutBase.AttachedFlyout>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="94" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Grid VerticalAlignment="Top" Width="70" Height="70">
                                                <controls:UwpIf Value="{Binding ElementName=FeedGrid, Path=DataContext.Images}">
                                                    <controls:RoundImage Source="{Binding Image}"/>
                                                </controls:UwpIf>
                                                <controls:UwpIf Grid.Row="0" Value="{Binding ElementName=FeedGrid, Path=DataContext.Images, Converter={StaticResource NegateBool}}">
                                                    <controls:RoundImage/>
                                                </controls:UwpIf>
                                            </Grid>
                                            <StackPanel Grid.Column="1" VerticalAlignment="Top" Margin="0 0 12 0">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE735;" FontSize="11" Margin="0 0 3 -3"
                                                        Visibility="{Binding Fave, Mode=OneWay, Converter={StaticResource TruthyToVisible}}"
                                                        Foreground="{ThemeResource SystemControlBackgroundAccentBrush}"/>
                                                    <TextBlock Grid.Column="1" Text="{Binding Feed, Converter={StaticResource StrToUpper}}" 
                                                        FontSize="11" Foreground="{ThemeResource SystemControlBackgroundAccentBrush}"
                                                        TextTrimming="CharacterEllipsis" FontWeight="SemiBold"/>
                                                    <TextBlock Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Top"
                                                        Foreground="{ThemeResource SystemControlBackgroundAccentBrush}"
                                                        Text="{Binding Published}" FontSize="11" FontWeight="SemiBold"/>
                                                </Grid>
                                                <TextBlock Text="{Binding Title}" TextWrapping="Wrap"/>
                                            </StackPanel>
                                        </Grid>
                                    </DataTemplate>
                                </toolkit:PullToRefreshListView.ItemTemplate>
                            </toolkit:PullToRefreshListView>
                            <controls:ErrorScreen Title="{Binding Converter={StaticResource Locale}, ConverterParameter=FeedNothingTitle}"
                                                  Description="{Binding Converter={StaticResource Locale}, ConverterParameter=FeedNothing}"
                                                  Action="{Binding Converter={StaticResource Locale}, ConverterParameter=AddChannel}"
                                                  IsVisible="{Binding IsEmpty, Mode=OneWay}" 
                                                  Command="{Binding Modify}" 
                                                  Symbol="List"/>
                            <controls:ErrorScreen Title="{Binding Converter={StaticResource Locale}, ConverterParameter=FeedErrorTitle}"
                                                  Description="{Binding Converter={StaticResource Locale}, ConverterParameter=FeedErrorDescription}"
                                                  Action="{Binding Converter={StaticResource Locale}, ConverterParameter=Refresh}"
                                                  IsVisible="{Binding HasErrors, Mode=OneWay}"
                                                  Command="{Binding Fetch}"
                                                  Symbol="Refresh"/>
                            <controls:LoadingScreen IsActive="{Binding IsLoading, Mode=OneWay}"/>
                        </Grid>
                    </DataTemplate>
                </Pivot.ItemTemplate>
            </Pivot>
            <controls:ErrorScreen Title="{Binding Converter={StaticResource Locale}, ConverterParameter=FeedWelcomeTitle}"
                                  Description="{Binding Converter={StaticResource Locale}, ConverterParameter=FeedWelcome}"
                                  Action="{Binding Converter={StaticResource Locale}, ConverterParameter=AddChannel}"
                                  IsVisible="{Binding IsEmpty, Mode=OneWay}"
                                  Command="{Binding Modify}"
                                  Grid.Row="1" Symbol="List"/>
            <controls:ErrorScreen Title="{Binding Converter={StaticResource Locale}, ConverterParameter=FeedErrorTitle}"
                                  Description="{Binding Converter={StaticResource Locale}, ConverterParameter=FeedErrorDescription}"
                                  Action="{Binding Converter={StaticResource Locale}, ConverterParameter=Refresh}"
                                  IsVisible="{Binding HasErrors, Mode=OneWay}"
                                  Command="{Binding Load}"
                                   Grid.Row="1" Symbol="Refresh"/>
            <controls:LoadingScreen Grid.Row="1" IsActive="{Binding IsLoading}" Margin="0 48 0 0"/>
        </Grid>
    </Grid>
</Page>
    